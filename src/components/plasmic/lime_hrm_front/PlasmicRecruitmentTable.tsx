// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: vQU939GjUi82K5u1iSBKF3
// Component: 06awOUIVXL
import * as React from "react";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import CheckboxPrimary from "../../CheckboxPrimary"; // plasmic-import: txP424hXELb/component
import ButtonPrimary from "../../ButtonPrimary"; // plasmic-import: puPU6pgA-z/component

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_lime_hrm_front.module.css"; // plasmic-import: vQU939GjUi82K5u1iSBKF3/projectcss
import * as sty from "./PlasmicRecruitmentTable.module.css"; // plasmic-import: 06awOUIVXL/css

export type PlasmicRecruitmentTable__VariantMembers = {};

export type PlasmicRecruitmentTable__VariantsArgs = {};
type VariantPropType = keyof PlasmicRecruitmentTable__VariantsArgs;
export const PlasmicRecruitmentTable__VariantProps =
  new Array<VariantPropType>();

export type PlasmicRecruitmentTable__ArgsType = {};
type ArgPropType = keyof PlasmicRecruitmentTable__ArgsType;
export const PlasmicRecruitmentTable__ArgProps = new Array<ArgPropType>();

export type PlasmicRecruitmentTable__OverridesType = {
  root?: p.Flex<"div">;
  columns?: p.Flex<"div">;
  column2Main?: p.Flex<"div">;
  column3Main?: p.Flex<"div">;
  column4Main?: p.Flex<"div">;
  column5Main?: p.Flex<"div">;
  column6Main?: p.Flex<"div">;
  column7Main?: p.Flex<"div">;
  column8Main?: p.Flex<"div">;
  example1?: p.Flex<"div">;
  example2?: p.Flex<"div">;
  example3?: p.Flex<"div">;
  example4?: p.Flex<"div">;
  example5?: p.Flex<"div">;
  example6?: p.Flex<"div">;
  column1?: p.Flex<"div">;
  column2?: p.Flex<"div">;
  column3?: p.Flex<"div">;
  column4?: p.Flex<"div">;
  column5?: p.Flex<"div">;
  column52?: p.Flex<"div">;
  column53?: p.Flex<"div">;
  column7?: p.Flex<"div">;
};

export interface DefaultRecruitmentTableProps {
  className?: string;
}

function PlasmicRecruitmentTable__RenderFunc(props: {
  variants: PlasmicRecruitmentTable__VariantsArgs;
  args: PlasmicRecruitmentTable__ArgsType;
  overrides: PlasmicRecruitmentTable__OverridesType;
  dataFetches?: PlasmicRecruitmentTable__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <div className={classNames(defaultcss.all, sty.freeBox__olUus)} />

      <div
        data-plasmic-name={"columns"}
        data-plasmic-override={overrides.columns}
        className={classNames(defaultcss.all, sty.columns)}
      >
        <div
          data-plasmic-name={"column2Main"}
          data-plasmic-override={overrides.column2Main}
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.column2Main
          )}
        >
          {"Job Title"}
        </div>

        <div
          data-plasmic-name={"column3Main"}
          data-plasmic-override={overrides.column3Main}
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.column3Main
          )}
        >
          {"Candidate"}
        </div>

        <div
          data-plasmic-name={"column4Main"}
          data-plasmic-override={overrides.column4Main}
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.column4Main
          )}
        >
          {"Priority"}
        </div>

        <div
          data-plasmic-name={"column5Main"}
          data-plasmic-override={overrides.column5Main}
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.column5Main
          )}
        >
          {"Hiring Manager"}
        </div>

        <div
          data-plasmic-name={"column6Main"}
          data-plasmic-override={overrides.column6Main}
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.column6Main
          )}
        >
          {"Status"}
        </div>

        <div
          data-plasmic-name={"column7Main"}
          data-plasmic-override={overrides.column7Main}
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.column7Main
          )}
        >
          {"Resume"}
        </div>

        <div
          data-plasmic-name={"column8Main"}
          data-plasmic-override={overrides.column8Main}
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.column8Main
          )}
        >
          {"Date"}
        </div>

        <CheckboxPrimary
          className={classNames("__wab_instance", sty.checkboxPrimary__hlQww)}
        >
          {null}
        </CheckboxPrimary>
      </div>

      <div
        data-plasmic-name={"example1"}
        data-plasmic-override={overrides.example1}
        className={classNames(defaultcss.all, sty.example1)}
      />

      <div
        data-plasmic-name={"example2"}
        data-plasmic-override={overrides.example2}
        className={classNames(defaultcss.all, sty.example2)}
      />

      <div
        data-plasmic-name={"example3"}
        data-plasmic-override={overrides.example3}
        className={classNames(defaultcss.all, sty.example3)}
      />

      <div
        data-plasmic-name={"example4"}
        data-plasmic-override={overrides.example4}
        className={classNames(defaultcss.all, sty.example4)}
      />

      <div
        data-plasmic-name={"example5"}
        data-plasmic-override={overrides.example5}
        className={classNames(defaultcss.all, sty.example5)}
      />

      <div
        data-plasmic-name={"example6"}
        data-plasmic-override={overrides.example6}
        className={classNames(defaultcss.all, sty.example6)}
      />

      <div
        data-plasmic-name={"column1"}
        data-plasmic-override={overrides.column1}
        className={classNames(defaultcss.all, sty.column1)}
      >
        <CheckboxPrimary
          className={classNames("__wab_instance", sty.checkboxPrimary__opm2S)}
        >
          {null}
        </CheckboxPrimary>

        <CheckboxPrimary
          className={classNames("__wab_instance", sty.checkboxPrimary__iQXj1)}
        >
          {null}
        </CheckboxPrimary>

        <CheckboxPrimary
          className={classNames("__wab_instance", sty.checkboxPrimary__x3Qny)}
        >
          {null}
        </CheckboxPrimary>

        <CheckboxPrimary
          className={classNames("__wab_instance", sty.checkboxPrimary__onoHv)}
        >
          {null}
        </CheckboxPrimary>

        <CheckboxPrimary
          className={classNames("__wab_instance", sty.checkboxPrimary__x2AXa)}
        >
          {null}
        </CheckboxPrimary>

        <CheckboxPrimary
          className={classNames("__wab_instance", sty.checkboxPrimary__oyyGy)}
        >
          {null}
        </CheckboxPrimary>
      </div>

      <div
        data-plasmic-name={"column2"}
        data-plasmic-override={overrides.column2}
        className={classNames(defaultcss.all, sty.column2)}
      >
        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__ax2J5
          )}
        >
          {"SWE Intern"}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__laPtq
          )}
        >
          {"Graphic Desig..."}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__i39Xv
          )}
        >
          {"FSW Intern"}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__o7HAb
          )}
        >
          {"Graphic Desig..."}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__ua4Cw
          )}
        >
          {"FSW Intern"}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__sfw8Q
          )}
        >
          {"FSW Intern"}
        </div>
      </div>

      <div
        data-plasmic-name={"column3"}
        data-plasmic-override={overrides.column3}
        className={classNames(defaultcss.all, sty.column3)}
      >
        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__ymvQo
          )}
        >
          {"Reshmitha M..."}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__pzcqK
          )}
        >
          {"Jane Doe"}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__kKxhF
          )}
        >
          {"John Doe"}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__o9CMx
          )}
        >
          {"Billy Bob"}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__tRtcq
          )}
        >
          {"Lightning Mc..."}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__fBubK
          )}
        >
          {"Albert Einste..."}
        </div>
      </div>

      <div
        data-plasmic-name={"column4"}
        data-plasmic-override={overrides.column4}
        className={classNames(defaultcss.all, sty.column4)}
      >
        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__eFnjJ
          )}
        >
          {"High"}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__dGsVu
          )}
        >
          {"Low"}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__cgAdF
          )}
        >
          {"Mid"}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox___7LjJc
          )}
        >
          {"Low"}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__lEpj
          )}
        >
          {"Mid"}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__qGsf
          )}
        >
          {"Mid"}
        </div>
      </div>

      <div
        data-plasmic-name={"column5"}
        data-plasmic-override={overrides.column5}
        className={classNames(defaultcss.all, sty.column5)}
      >
        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__qLqgW
          )}
        >
          {"Srivishnu Pira..."}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__ynx8A
          )}
        >
          {"Nathan Raikm..."}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__nvZiE
          )}
        >
          {"Srivishnu Pira..."}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox___9QSn
          )}
        >
          {"Nathan Raikm..."}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__sC9Kb
          )}
        >
          {"Nathan Raikm..."}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__nwflo
          )}
        >
          {"Srivishnu Pira..."}
        </div>
      </div>

      <div
        data-plasmic-name={"column52"}
        data-plasmic-override={overrides.column52}
        className={classNames(defaultcss.all, sty.column52)}
      >
        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__lwFgV
          )}
        >
          {"Interview"}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__pgUbs
          )}
        >
          {"Offer Letter"}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox___8PCFs
          )}
        >
          {"Indeed"}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__j069
          )}
        >
          {"Indeed"}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__pk33L
          )}
        >
          {"Offer Letter"}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__iodfN
          )}
        >
          {"Interview"}
        </div>
      </div>

      <div
        data-plasmic-name={"column53"}
        data-plasmic-override={overrides.column53}
        className={classNames(defaultcss.all, sty.column53)}
      >
        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox___6NRwP
          )}
        >
          {"07/12/2021"}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__l6Y3U
          )}
        >
          {"07/12/2021"}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox___59Mtc
          )}
        >
          {"07/10/2021"}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__i7Luq
          )}
        >
          {"07/01/2021"}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox___04CS
          )}
        >
          {"06/21/2021"}
        </div>

        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.freeBox__wY1U
          )}
        >
          {"06/21/2021"}
        </div>
      </div>

      <div
        data-plasmic-name={"column7"}
        data-plasmic-override={overrides.column7}
        className={classNames(defaultcss.all, sty.column7)}
      >
        <ButtonPrimary
          className={classNames("__wab_instance", sty.buttonPrimary__bDSmG)}
        />

        <ButtonPrimary
          className={classNames("__wab_instance", sty.buttonPrimary___959K)}
        />

        <ButtonPrimary
          className={classNames("__wab_instance", sty.buttonPrimary___59Xo)}
        />

        <ButtonPrimary
          className={classNames("__wab_instance", sty.buttonPrimary___9Wg73)}
        />

        <ButtonPrimary
          className={classNames("__wab_instance", sty.buttonPrimary__gVrDl)}
        />

        <ButtonPrimary
          className={classNames("__wab_instance", sty.buttonPrimary__rRtJh)}
        />
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "columns",
    "column2Main",
    "column3Main",
    "column4Main",
    "column5Main",
    "column6Main",
    "column7Main",
    "column8Main",
    "example1",
    "example2",
    "example3",
    "example4",
    "example5",
    "example6",
    "column1",
    "column2",
    "column3",
    "column4",
    "column5",
    "column52",
    "column53",
    "column7"
  ],
  columns: [
    "columns",
    "column2Main",
    "column3Main",
    "column4Main",
    "column5Main",
    "column6Main",
    "column7Main",
    "column8Main"
  ],
  column2Main: ["column2Main"],
  column3Main: ["column3Main"],
  column4Main: ["column4Main"],
  column5Main: ["column5Main"],
  column6Main: ["column6Main"],
  column7Main: ["column7Main"],
  column8Main: ["column8Main"],
  example1: ["example1"],
  example2: ["example2"],
  example3: ["example3"],
  example4: ["example4"],
  example5: ["example5"],
  example6: ["example6"],
  column1: ["column1"],
  column2: ["column2"],
  column3: ["column3"],
  column4: ["column4"],
  column5: ["column5"],
  column52: ["column52"],
  column53: ["column53"],
  column7: ["column7"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  columns: "div";
  column2Main: "div";
  column3Main: "div";
  column4Main: "div";
  column5Main: "div";
  column6Main: "div";
  column7Main: "div";
  column8Main: "div";
  example1: "div";
  example2: "div";
  example3: "div";
  example4: "div";
  example5: "div";
  example6: "div";
  column1: "div";
  column2: "div";
  column3: "div";
  column4: "div";
  column5: "div";
  column52: "div";
  column53: "div";
  column7: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicRecruitmentTable__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicRecruitmentTable__VariantsArgs;
    args?: PlasmicRecruitmentTable__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicRecruitmentTable__Fetches;
  } & Omit<PlasmicRecruitmentTable__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicRecruitmentTable__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicRecruitmentTable__ArgProps,
      internalVariantPropNames: PlasmicRecruitmentTable__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicRecruitmentTable__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicRecruitmentTable";
  } else {
    func.displayName = `PlasmicRecruitmentTable.${nodeName}`;
  }
  return func;
}

export const PlasmicRecruitmentTable = Object.assign(
  // Top-level PlasmicRecruitmentTable renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    columns: makeNodeComponent("columns"),
    column2Main: makeNodeComponent("column2Main"),
    column3Main: makeNodeComponent("column3Main"),
    column4Main: makeNodeComponent("column4Main"),
    column5Main: makeNodeComponent("column5Main"),
    column6Main: makeNodeComponent("column6Main"),
    column7Main: makeNodeComponent("column7Main"),
    column8Main: makeNodeComponent("column8Main"),
    example1: makeNodeComponent("example1"),
    example2: makeNodeComponent("example2"),
    example3: makeNodeComponent("example3"),
    example4: makeNodeComponent("example4"),
    example5: makeNodeComponent("example5"),
    example6: makeNodeComponent("example6"),
    column1: makeNodeComponent("column1"),
    column2: makeNodeComponent("column2"),
    column3: makeNodeComponent("column3"),
    column4: makeNodeComponent("column4"),
    column5: makeNodeComponent("column5"),
    column52: makeNodeComponent("column52"),
    column53: makeNodeComponent("column53"),
    column7: makeNodeComponent("column7"),

    // Metadata about props expected for PlasmicRecruitmentTable
    internalVariantProps: PlasmicRecruitmentTable__VariantProps,
    internalArgProps: PlasmicRecruitmentTable__ArgProps
  }
);

export default PlasmicRecruitmentTable;
/* prettier-ignore-end */
